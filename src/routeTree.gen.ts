/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkoutImport } from './routes/workout'
import { Route as WeightSelectImport } from './routes/weight-select'
import { Route as SignupImport } from './routes/signup'
import { Route as SettingsImport } from './routes/settings'
import { Route as GenderSelectImport } from './routes/gender-select'
import { Route as AgeSelectImport } from './routes/age-select'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WorkoutRoute = WorkoutImport.update({
  id: '/workout',
  path: '/workout',
  getParentRoute: () => rootRoute,
} as any)

const WeightSelectRoute = WeightSelectImport.update({
  id: '/weight-select',
  path: '/weight-select',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const GenderSelectRoute = GenderSelectImport.update({
  id: '/gender-select',
  path: '/gender-select',
  getParentRoute: () => rootRoute,
} as any)

const AgeSelectRoute = AgeSelectImport.update({
  id: '/age-select',
  path: '/age-select',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/age-select': {
      id: '/age-select'
      path: '/age-select'
      fullPath: '/age-select'
      preLoaderRoute: typeof AgeSelectImport
      parentRoute: typeof rootRoute
    }
    '/gender-select': {
      id: '/gender-select'
      path: '/gender-select'
      fullPath: '/gender-select'
      preLoaderRoute: typeof GenderSelectImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/weight-select': {
      id: '/weight-select'
      path: '/weight-select'
      fullPath: '/weight-select'
      preLoaderRoute: typeof WeightSelectImport
      parentRoute: typeof rootRoute
    }
    '/workout': {
      id: '/workout'
      path: '/workout'
      fullPath: '/workout'
      preLoaderRoute: typeof WorkoutImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/age-select': typeof AgeSelectRoute
  '/gender-select': typeof GenderSelectRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/weight-select': typeof WeightSelectRoute
  '/workout': typeof WorkoutRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/age-select': typeof AgeSelectRoute
  '/gender-select': typeof GenderSelectRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/weight-select': typeof WeightSelectRoute
  '/workout': typeof WorkoutRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/age-select': typeof AgeSelectRoute
  '/gender-select': typeof GenderSelectRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/weight-select': typeof WeightSelectRoute
  '/workout': typeof WorkoutRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/age-select'
    | '/gender-select'
    | '/settings'
    | '/signup'
    | '/weight-select'
    | '/workout'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/age-select'
    | '/gender-select'
    | '/settings'
    | '/signup'
    | '/weight-select'
    | '/workout'
  id:
    | '__root__'
    | '/'
    | '/age-select'
    | '/gender-select'
    | '/settings'
    | '/signup'
    | '/weight-select'
    | '/workout'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgeSelectRoute: typeof AgeSelectRoute
  GenderSelectRoute: typeof GenderSelectRoute
  SettingsRoute: typeof SettingsRoute
  SignupRoute: typeof SignupRoute
  WeightSelectRoute: typeof WeightSelectRoute
  WorkoutRoute: typeof WorkoutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgeSelectRoute: AgeSelectRoute,
  GenderSelectRoute: GenderSelectRoute,
  SettingsRoute: SettingsRoute,
  SignupRoute: SignupRoute,
  WeightSelectRoute: WeightSelectRoute,
  WorkoutRoute: WorkoutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/age-select",
        "/gender-select",
        "/settings",
        "/signup",
        "/weight-select",
        "/workout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/age-select": {
      "filePath": "age-select.tsx"
    },
    "/gender-select": {
      "filePath": "gender-select.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/weight-select": {
      "filePath": "weight-select.tsx"
    },
    "/workout": {
      "filePath": "workout.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

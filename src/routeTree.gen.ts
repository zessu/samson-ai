/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkoutImport } from './routes/workout'
import { Route as WeightSelectImport } from './routes/weight-select'
import { Route as TimeSelectorImport } from './routes/time-selector'
import { Route as StrengthEquipmentImport } from './routes/strength-equipment'
import { Route as SignupImport } from './routes/signup'
import { Route as SettingsImport } from './routes/settings'
import { Route as GoalsImport } from './routes/goals'
import { Route as GenderSelectImport } from './routes/gender-select'
import { Route as FitnessSelectImport } from './routes/fitness-select'
import { Route as DayTimeImport } from './routes/day-time'
import { Route as CardioEquipmentImport } from './routes/cardio-equipment'
import { Route as AgeSelectImport } from './routes/age-select'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WorkoutRoute = WorkoutImport.update({
  id: '/workout',
  path: '/workout',
  getParentRoute: () => rootRoute,
} as any)

const WeightSelectRoute = WeightSelectImport.update({
  id: '/weight-select',
  path: '/weight-select',
  getParentRoute: () => rootRoute,
} as any)

const TimeSelectorRoute = TimeSelectorImport.update({
  id: '/time-selector',
  path: '/time-selector',
  getParentRoute: () => rootRoute,
} as any)

const StrengthEquipmentRoute = StrengthEquipmentImport.update({
  id: '/strength-equipment',
  path: '/strength-equipment',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const GoalsRoute = GoalsImport.update({
  id: '/goals',
  path: '/goals',
  getParentRoute: () => rootRoute,
} as any)

const GenderSelectRoute = GenderSelectImport.update({
  id: '/gender-select',
  path: '/gender-select',
  getParentRoute: () => rootRoute,
} as any)

const FitnessSelectRoute = FitnessSelectImport.update({
  id: '/fitness-select',
  path: '/fitness-select',
  getParentRoute: () => rootRoute,
} as any)

const DayTimeRoute = DayTimeImport.update({
  id: '/day-time',
  path: '/day-time',
  getParentRoute: () => rootRoute,
} as any)

const CardioEquipmentRoute = CardioEquipmentImport.update({
  id: '/cardio-equipment',
  path: '/cardio-equipment',
  getParentRoute: () => rootRoute,
} as any)

const AgeSelectRoute = AgeSelectImport.update({
  id: '/age-select',
  path: '/age-select',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/age-select': {
      id: '/age-select'
      path: '/age-select'
      fullPath: '/age-select'
      preLoaderRoute: typeof AgeSelectImport
      parentRoute: typeof rootRoute
    }
    '/cardio-equipment': {
      id: '/cardio-equipment'
      path: '/cardio-equipment'
      fullPath: '/cardio-equipment'
      preLoaderRoute: typeof CardioEquipmentImport
      parentRoute: typeof rootRoute
    }
    '/day-time': {
      id: '/day-time'
      path: '/day-time'
      fullPath: '/day-time'
      preLoaderRoute: typeof DayTimeImport
      parentRoute: typeof rootRoute
    }
    '/fitness-select': {
      id: '/fitness-select'
      path: '/fitness-select'
      fullPath: '/fitness-select'
      preLoaderRoute: typeof FitnessSelectImport
      parentRoute: typeof rootRoute
    }
    '/gender-select': {
      id: '/gender-select'
      path: '/gender-select'
      fullPath: '/gender-select'
      preLoaderRoute: typeof GenderSelectImport
      parentRoute: typeof rootRoute
    }
    '/goals': {
      id: '/goals'
      path: '/goals'
      fullPath: '/goals'
      preLoaderRoute: typeof GoalsImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/strength-equipment': {
      id: '/strength-equipment'
      path: '/strength-equipment'
      fullPath: '/strength-equipment'
      preLoaderRoute: typeof StrengthEquipmentImport
      parentRoute: typeof rootRoute
    }
    '/time-selector': {
      id: '/time-selector'
      path: '/time-selector'
      fullPath: '/time-selector'
      preLoaderRoute: typeof TimeSelectorImport
      parentRoute: typeof rootRoute
    }
    '/weight-select': {
      id: '/weight-select'
      path: '/weight-select'
      fullPath: '/weight-select'
      preLoaderRoute: typeof WeightSelectImport
      parentRoute: typeof rootRoute
    }
    '/workout': {
      id: '/workout'
      path: '/workout'
      fullPath: '/workout'
      preLoaderRoute: typeof WorkoutImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/age-select': typeof AgeSelectRoute
  '/cardio-equipment': typeof CardioEquipmentRoute
  '/day-time': typeof DayTimeRoute
  '/fitness-select': typeof FitnessSelectRoute
  '/gender-select': typeof GenderSelectRoute
  '/goals': typeof GoalsRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/strength-equipment': typeof StrengthEquipmentRoute
  '/time-selector': typeof TimeSelectorRoute
  '/weight-select': typeof WeightSelectRoute
  '/workout': typeof WorkoutRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/age-select': typeof AgeSelectRoute
  '/cardio-equipment': typeof CardioEquipmentRoute
  '/day-time': typeof DayTimeRoute
  '/fitness-select': typeof FitnessSelectRoute
  '/gender-select': typeof GenderSelectRoute
  '/goals': typeof GoalsRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/strength-equipment': typeof StrengthEquipmentRoute
  '/time-selector': typeof TimeSelectorRoute
  '/weight-select': typeof WeightSelectRoute
  '/workout': typeof WorkoutRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/age-select': typeof AgeSelectRoute
  '/cardio-equipment': typeof CardioEquipmentRoute
  '/day-time': typeof DayTimeRoute
  '/fitness-select': typeof FitnessSelectRoute
  '/gender-select': typeof GenderSelectRoute
  '/goals': typeof GoalsRoute
  '/settings': typeof SettingsRoute
  '/signup': typeof SignupRoute
  '/strength-equipment': typeof StrengthEquipmentRoute
  '/time-selector': typeof TimeSelectorRoute
  '/weight-select': typeof WeightSelectRoute
  '/workout': typeof WorkoutRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/age-select'
    | '/cardio-equipment'
    | '/day-time'
    | '/fitness-select'
    | '/gender-select'
    | '/goals'
    | '/settings'
    | '/signup'
    | '/strength-equipment'
    | '/time-selector'
    | '/weight-select'
    | '/workout'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/age-select'
    | '/cardio-equipment'
    | '/day-time'
    | '/fitness-select'
    | '/gender-select'
    | '/goals'
    | '/settings'
    | '/signup'
    | '/strength-equipment'
    | '/time-selector'
    | '/weight-select'
    | '/workout'
  id:
    | '__root__'
    | '/'
    | '/age-select'
    | '/cardio-equipment'
    | '/day-time'
    | '/fitness-select'
    | '/gender-select'
    | '/goals'
    | '/settings'
    | '/signup'
    | '/strength-equipment'
    | '/time-selector'
    | '/weight-select'
    | '/workout'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgeSelectRoute: typeof AgeSelectRoute
  CardioEquipmentRoute: typeof CardioEquipmentRoute
  DayTimeRoute: typeof DayTimeRoute
  FitnessSelectRoute: typeof FitnessSelectRoute
  GenderSelectRoute: typeof GenderSelectRoute
  GoalsRoute: typeof GoalsRoute
  SettingsRoute: typeof SettingsRoute
  SignupRoute: typeof SignupRoute
  StrengthEquipmentRoute: typeof StrengthEquipmentRoute
  TimeSelectorRoute: typeof TimeSelectorRoute
  WeightSelectRoute: typeof WeightSelectRoute
  WorkoutRoute: typeof WorkoutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgeSelectRoute: AgeSelectRoute,
  CardioEquipmentRoute: CardioEquipmentRoute,
  DayTimeRoute: DayTimeRoute,
  FitnessSelectRoute: FitnessSelectRoute,
  GenderSelectRoute: GenderSelectRoute,
  GoalsRoute: GoalsRoute,
  SettingsRoute: SettingsRoute,
  SignupRoute: SignupRoute,
  StrengthEquipmentRoute: StrengthEquipmentRoute,
  TimeSelectorRoute: TimeSelectorRoute,
  WeightSelectRoute: WeightSelectRoute,
  WorkoutRoute: WorkoutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/age-select",
        "/cardio-equipment",
        "/day-time",
        "/fitness-select",
        "/gender-select",
        "/goals",
        "/settings",
        "/signup",
        "/strength-equipment",
        "/time-selector",
        "/weight-select",
        "/workout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/age-select": {
      "filePath": "age-select.tsx"
    },
    "/cardio-equipment": {
      "filePath": "cardio-equipment.tsx"
    },
    "/day-time": {
      "filePath": "day-time.tsx"
    },
    "/fitness-select": {
      "filePath": "fitness-select.tsx"
    },
    "/gender-select": {
      "filePath": "gender-select.tsx"
    },
    "/goals": {
      "filePath": "goals.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/strength-equipment": {
      "filePath": "strength-equipment.tsx"
    },
    "/time-selector": {
      "filePath": "time-selector.tsx"
    },
    "/weight-select": {
      "filePath": "weight-select.tsx"
    },
    "/workout": {
      "filePath": "workout.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
